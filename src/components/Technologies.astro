---
// Componente de Tecnologías
const frontendTechs = [
  { name: "HTML", icon: "fab fa-html5", color: "#E34F26", level: "Avanzado" },
  { name: "JavaScript", icon: "fab fa-js-square", color: "#F7DF1E", level: "Medio" },
  { name: "React", icon: "fab fa-react", color: "#61DAFB", level: "Medio" },
  { name: "Astro", icon: "fas fa-rocket", color: "#FF5D01", level: "Medio" },
  { name: "CSS", icon: "fab fa-css3-alt", color: "#1572B6", level: "Avanzado" },
];

const backendTechs = [
  { name: "Java", icon: "fab fa-java", color: "#007396", level: "Avanzado" },
  { name: "Python", icon: "fab fa-python", color: "#3776AB", level: "Medio-Avanzado" },
  { name: "C#", icon: "devicon-csharp-plain", color: "#512BD4", level: "Avanzado" },
  { name: "ASP.NET", icon: "devicon-dot-net-plain", color: "#512BD4", level: "Básico" },
  { name: "Node.js", icon: "fab fa-node-js", color: "#339933", level: "Básico" },
  { name: "Laravel", icon: "fab fa-laravel", color: "#FF2D20", level: "Avanzado" },
  { name: "PHP", icon: "fab fa-php", color: "#777BB4", level: "Avanzado" },
  { name: "Kotlin", icon: "devicon-kotlin-plain", color: "#7F52FF", level: "Medio" },
];

const toolsTechs = [
  { name: "Azure", icon: "devicon-azure-plain", color: "#0078D4", level: "Básico" },
  { name: "Git", icon: "fab fa-git-alt", color: "#F05032", level: "Avanzado" },
  { name: "Docker", icon: "fab fa-docker", color: "#2496ED", level: "Básico-Medio" },
  { name: "PostgreSQL", icon: "devicon-postgresql-plain", color: "#336791", level: "Medio" },
  { name: "MySQL", icon: "devicon-mysql-plain", color: "#4479A1", level: "Avanzado" },
];

// Definir categoría de tecnologías
const techCategories = [
  { id: "frontend", name: "Frontend", color: "blue", techs: frontendTechs },
  { id: "backend", name: "Backend", color: "indigo", techs: backendTechs },
  { id: "tools", name: "Herramientas", color: "purple", techs: toolsTechs },
];
---

<section id="technologies" class="py-20 relative overflow-hidden">
  <!-- Background Grid y Efectos -->
  <div class="absolute inset-0 -z-10 bg-gradient-to-b from-secondary via-secondary/95 to-black/80"></div>
  
  <!-- Partículas de fondo -->
  <div class="absolute inset-0 -z-10">
    <div class="absolute top-1/4 right-1/4 w-64 h-64 bg-primary/5 rounded-full filter blur-3xl"></div>
    <div class="absolute bottom-1/4 left-1/4 w-80 h-80 bg-indigo-500/5 rounded-full filter blur-3xl"></div>
    
    <!-- Elementos decorativos adicionales -->
    <div class="absolute top-20 left-20 w-3 h-3 bg-blue-500/30 rounded-full opacity-70 animate-float" style="animation-delay: 0.5s;"></div>
    <div class="absolute bottom-20 right-20 w-2 h-2 bg-purple-500/30 rounded-full opacity-70 animate-float" style="animation-delay: 1.5s;"></div>
    <div class="absolute top-1/2 left-1/3 w-4 h-4 bg-indigo-500/30 rounded-full opacity-70 animate-float" style="animation-delay: 2s;"></div>
    
    <!-- Patrón de puntos decorativo -->
    <div class="absolute inset-0 bg-grid-pattern opacity-5"></div>
    
    <!-- Líneas decorativas -->
    <div class="hidden lg:block absolute top-1/4 left-0 w-1/3 h-px bg-gradient-to-r from-transparent to-blue-500/20"></div>
    <div class="hidden lg:block absolute bottom-1/4 right-0 w-1/3 h-px bg-gradient-to-l from-transparent to-purple-500/20"></div>
  </div>
  
  <!-- Líneas decorativas -->
  <div class="absolute top-0 left-0 w-full h-px bg-gradient-to-r from-transparent via-blue-500/20 to-transparent"></div>
  <div class="absolute bottom-0 left-0 w-full h-px bg-gradient-to-r from-transparent via-purple-500/20 to-transparent"></div>
  
  <div class="container mx-auto px-4 md:px-8">
    <div class="text-center mb-16 animate-fade-in-up">
      <h2 class="text-4xl md:text-5xl font-bold mb-6 relative">
        <span class="text-white">Tecnologías y</span>
        <span class="text-transparent bg-clip-text bg-gradient-to-r from-blue-500 to-blue-700"> Herramientas</span>
        <div class="absolute -right-8 top-0 w-6 h-6 text-blue-500 animate-spin-slow hidden md:block opacity-70">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
          </svg>
        </div>
      </h2>
      <div class="w-24 h-1.5 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full mx-auto mb-8"></div>
      <p class="text-xl text-gray-300 max-w-3xl mx-auto">
        Experiencia en múltiples tecnologías para crear soluciones completas y eficientes.
      </p>
    </div>
    
    <!-- Pestañas de categorías -->
    <div class="flex flex-wrap justify-center gap-4 mb-12 animate-fade-in-up" style="animation-delay: 200ms;">
      {techCategories.map((category, index) => (
        <button 
          id={`tab-${category.id}`} 
          class={`tab-btn px-6 py-2.5 rounded-full bg-${category.color}-500/10 border border-${category.color}-500/30 text-${category.color}-400 font-medium transition-all hover:bg-${category.color}-500/20 hover:shadow-glow-sm hover:shadow-${category.color}-500/20 backdrop-blur-sm ${index === 0 ? 'active' : ''}`}
        >
          {category.id === 'frontend' && (
            <span class="flex items-center gap-2">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
              </svg>
              {category.name}
            </span>
          )}
          
          {category.id === 'backend' && (
            <span class="flex items-center gap-2">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01" />
              </svg>
              {category.name}
            </span>
          )}
          
          {category.id === 'tools' && (
            <span class="flex items-center gap-2">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
              </svg>
              {category.name}
            </span>
          )}
        </button>
      ))}
    </div>
    
    <!-- Contenido de las tecnologías -->
    {techCategories.map((category, index) => (
      <div class={`tab-content animate-fade-in ${index !== 0 ? 'hidden' : ''}`} id={`content-${category.id}`}>
        <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-6">
          {category.techs.map((tech, techIndex) => (
            <div class="group animate-on-scroll" style={`animation-delay: ${techIndex * 50}ms`}>
              <div class={`bg-secondary/60 backdrop-blur-md rounded-2xl p-6 border border-${category.color}-500/10 transform transition-all duration-300 hover:scale-105 hover:border-${category.color}-500/30 flex flex-col items-center hover:bg-${category.color}-900/20 hover:shadow-lg hover:shadow-${category.color}-500/10`}>
                <!-- Efecto de brillo en hover -->
                <div class="absolute inset-0 bg-gradient-to-br from-white/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500 rounded-2xl"></div>
                
                <div class={`bg-${category.color}-900/30 w-16 h-16 rounded-xl flex items-center justify-center mb-4 text-3xl group-hover:bg-${category.color}-900/40 transition-all transform group-hover:-rotate-6 relative overflow-hidden`}>
                  <!-- Efecto de brillo en el icono -->
                  <div class="absolute inset-0 bg-gradient-to-r from-transparent via-white/10 to-transparent shimmer-effect opacity-0 group-hover:opacity-100"></div>
                  <i class={tech.icon} style={`color: ${tech.color}`}></i>
                </div>
                
                <h3 class="text-xl font-bold text-center mb-1.5 text-white group-hover:text-${category.color}-300 transition-colors">{tech.name}</h3>
                
                <!-- Badges con nivel de experiencia -->
                <div class={`mt-2 px-3 py-1 text-xs rounded-full bg-${category.color}-500/20 text-${category.color}-300 border border-${category.color}-500/20 group-hover:border-${category.color}-500/40 transition-colors flex items-center gap-1.5`}>
                  <span class="w-1.5 h-1.5 rounded-full bg-${category.color}-400"></span>
                  {tech.level}
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    ))}
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const tabButtons = document.querySelectorAll('.tab-btn');
    const tabContents = document.querySelectorAll('.tab-content');
    
    tabButtons.forEach(button => {
      button.addEventListener('click', () => {
        // Desactivar todos los botones
        tabButtons.forEach(btn => btn.classList.remove('active'));
        
        // Ocultar todos los contenidos
        tabContents.forEach(content => content.classList.add('hidden'));
        
        // Activar el botón actual
        button.classList.add('active');
        
        // Mostrar el contenido correspondiente
        const contentId = 'content-' + button.id.split('-')[1];
        const contentElement = document.getElementById(contentId);
        if (contentElement) {
          contentElement.classList.remove('hidden');
        }
      });
    });
  });
</script>

<style>
  /* Estilos para pestañas activas */
  .tab-btn.active {
    background: rgb(59, 130, 246, 0.2);
    box-shadow: 0 0 15px rgba(59, 130, 246, 0.3);
    position: relative;
    overflow: hidden;
  }
  
  .tab-btn.active::after {
    content: "";
    position: absolute;
    bottom: -1px;
    left: 25%;
    width: 50%;
    height: 2px;
    background: linear-gradient(90deg, transparent, rgb(59, 130, 246), transparent);
    animation: tab-glow 2s ease-in-out infinite;
  }
  
  #tab-backend.active {
    background: rgba(99, 102, 241, 0.2);
    box-shadow: 0 0 15px rgba(99, 102, 241, 0.3);
  }
  
  #tab-backend.active::after {
    background: linear-gradient(90deg, transparent, rgb(99, 102, 241), transparent);
  }
  
  #tab-tools.active {
    background: rgba(168, 85, 247, 0.2);
    box-shadow: 0 0 15px rgba(168, 85, 247, 0.3);
  }
  
  #tab-tools.active::after {
    background: linear-gradient(90deg, transparent, rgb(168, 85, 247), transparent);
  }
  
  /* Estilos para animaciones */
  @keyframes float {
    0% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
    100% { transform: translateY(0px); }
  }
  
  @keyframes tab-glow {
    0% { opacity: 0.5; }
    50% { opacity: 1; }
    100% { opacity: 0.5; }
  }
  
  .group:hover .float {
    animation: float 2s ease-in-out infinite;
  }
  
  /* Animación de fade-in para las pestañas */
  .tab-content {
    transition: opacity 0.3s ease-in-out;
  }
  
  .tab-content.animate-fade-in {
    animation: fadeIn 0.5s ease-in-out;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
</style> 